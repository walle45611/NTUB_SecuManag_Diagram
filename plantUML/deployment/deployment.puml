@startuml
title NTUB SecuManage (IS Capt) - K8s Deployment (dev)

skinparam componentStyle rectangle

node "Browser" as Browser

node "Kubernetes Cluster" <<Cluster>> {
    package "Ingress-Controller Namespace" <<Namespace>> {
        node "ingress-nginx" <<Pod>> as IngressController {
            component "nginx Ingress Controller"
            note right
                Host: inc-isms-dev.ntub.edu.tw
                TLS: enabled
                Paths:
                - /app  -> frontend
                - /api  -> backend
                - /rabbitmq -> RMQ mgmt (15672)
                - /minio-console -> MinIO console (9001)
                - /minio-api -> MinIO API (9000)
            end note
        }
    }

    package "IS Capt. Namespace" <<Namespace>> {
        node "frontend-pod" <<Pod>> as FE {
            component "Frontend\n(nginx)\nTCP:80"
            artifact "dist/\n(static files)"
        }

        node "backend-pod" <<Pod>> as BE {
            component "Backend\n(Python App)\nTCP:8000"
        }

        node "postgresql-pod" <<Pod>> as DB {
            database "PostgreSQL\nTCP:5432"
            note bottom
            Service: LoadBalancer
            Storage: 50Gi microk8s-hostpath
            end note
        }

        node "minio-pod" <<Pod>> as S3 {
            storage "MinIO\nAPI:9000 | Console:9001"
            note bottom
            Storage: 35Gi microk8s-hostpath
            end note
        }

        node "rabbitmq-pod" <<Pod>> as RMQ {
            component "RabbitMQ Client/Worker\n(Consumer)"
        }

        node "rabbitmq-server-pod" <<Pod>> as RMQS {
            component "RabbitMQ Server\nAMQP:5672 | Mgmt:15672"
            note bottom
            PVC: 20Gi microk8s-hostpath
            end note
        }

        node "ollama-pod" <<Pod>> as OLL {
            component "Ollama\nHTTP:11434"
            note bottom
            GPU: disabled (dev)
            Storage: 50Gi microk8s-hostpath
            end note
        }

        node "scheduler-pod" <<Pod>> as SCH {
            component "Scheduler\n(jobs/cron workers)"
        }

        node "alloy-pod" <<Pod>> as ALY {
            component "Grafana Alloy\nlogs/metrics agent"
            note bottom
            Loki: http://loki.observability.svc.cluster.local:3100
            end note
        }

    }
}

Browser --> IngressController : HTTPS inc-isms-dev.ntub.edu.tw
IngressController --> FE   : HTTPS /app  -> 80
IngressController --> BE   : HTTPS /api  -> 8000
IngressController --> RMQS : HTTPS /rabbitmq -> 15672
IngressController --> S3   : HTTPS /minio-console -> 9001
IngressController --> S3   : HTTPS /minio-api -> 9000

FE --> BE   : REST API
BE --> DB   : TCP:5432
BE --> S3   : S3 API (9000)
BE --> RMQS : AMQP (publish)
RMQ --> RMQS: AMQP (consume)
SCH --> RMQS: AMQP (produce/consume)
BE --> OLL  : HTTP:11434 (LLM inference)

@enduml