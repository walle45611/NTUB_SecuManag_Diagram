@startuml
' skinparam linetype ortho
left to right direction

entity "approval" as APV {
    name                    : string    {not null}
    description             : string    {nullable}
    related_object_category : enum      {not null, default: document, index}
    action_type             : enum      {default: create, index}
    final_status            : enum      {not null, default: pending}
    signers                 : jsonb     {not null}
    delay_count             : integer   {default: 0}
    created_time            : datetime  {not null, default: now() }
    --
    id                      : UUID      <<PK>>  {not null, default: uuid_generate_v4()}
    uploadfile_entity_id    : UUID      <<FK>>  {not null, references uploadfile_entity(id)}
    related_object_id       : UUID      <<FK>>  {not null, index, references announcement(id) when related_object_category='announcement'}
}

entity "uploadfile_entity" as UPE {
    name : string {not null}
    path : string {not null}
    content_type: enum {not null}
    --
    id   : UUID   <<PK>> {not null, default: uuid_generate_v4()}
}
UPE ||--o{ APV : approvals

entity "app_setting" as APS {
    email_signature       : string    {not null}
    maintain_email        : string    {not null}
    domain                : string    {not null}
    minio_bucket_name     : string    {not null}
    google_client_secret  : string    {not null}
    google_client_id      : string    {not null}
    microsoft_tenant_id   : string    {not null}
    microsoft_client_secret: string   {not null}
    microsoft_client_id   : string    {not null}
    smtp_sender_email     : string    {not null}
    smtp_sender_password  : string    {not null}
    created_time          : datetime  {not null, default: now() }
    version_group_id      : string    {not null}
    is_current            : bool      {not null, default: false}
    --
    id                    : UUID      <<PK>>  {not null, default: uuid_generate_v4()}
    parent_id             : UUID      <<FK>>  {references app_setting(id)}
    uploadfile_entity_id  : UUID      <<FK>>  {references uploadfile_entity(id)}
    logo_uploadfile_id    : UUID      <<FK>> {references uploadfile_entity(id)}
}
APS ||--o{ APV : approvals

entity "approval_template" as APT {
    template            : jsonb    {not null}
    name                : string   {not null}
    --
    id                  : UUID     <<PK>>  {not null, default: uuid_generate_v4()}
    app_setting_id      : UUID     <<FK>>  {not null, references app_setting(id), on delete: CASCADE}
}

' 關聯：一個 AppSetting 可以有多個 ApprovalTemplate
APS ||--o{ APT : templates

entity "announcement" as ANN {
    date              : datetime  {not null}
    title             : string    {not null}
    description       : string    {not null}
    is_show           : bool      {not null}
    created_time      : datetime  {not null, default: now() }
    version_group_id  : string    {not null}
    is_current        : bool      {not null, default: false}
    --
    id                : UUID      <<PK>>  {not null, default: uuid_generate_v4()}
    parent_id         : UUID      <<FK>>  {references announcement(id)}
}
ANN ||--o{ ANN : children
ANN ||--o{ APV : approvals

entity "asset_category" as ASC {
    name              : string    {not null}
    description       : string    {not null}
    created_time      : datetime  {not null, default: now() }
    version_group_id  : string    {not null}
    is_current        : bool      {not null, default: false}
    --
    id                : UUID      <<PK>>  {not null, default: uuid_generate_v4()}
    parent_id         : UUID      <<FK>>  {references asset_category(id)}
}
ASC ||--o{ ASC : children
ASC ||--o{ APV : approvals
@enduml
