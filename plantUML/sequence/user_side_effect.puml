  @startuml User Category Approval Side Effect
  !theme plain
  skinparam sequenceMessageAlign center
  skinparam maxMessageSize 150

  title 用戶類別 (User Category) Approval Side Effect 流程

  participant Consumer as "approval_approved_callback"
  participant ApprovalSvc as "ApprovalService\n(RabbitMQ)"
  participant UserRepo as "UserRepository"
  participant Database as "PostgreSQL Database"
  participant DocumentSvc as "DocumentService"
  participant Email as "NotificationService"

  note over Consumer: 從 RabbitMQ 接收到\n"approval.completed.approved"\n消息

  == 通用處理階段 ==

  Consumer -> ApprovalSvc: handle_side_effects(\napproval, "approved", loop)
  note right: approval_service.py:151

  ApprovalSvc -> ApprovalSvc: _validate_approval(approval)
  note right: 驗證 related_object_category = "user"

  ApprovalSvc -> ApprovalSvc: _process_signers_for_approval(\napproval, "approved")
  note right: 處理簽核人資訊

  == 用戶類別特定處理 ==

  ApprovalSvc -> ApprovalSvc: _handle_approval_side_effects(\napproval, "approved", creator_id, signers, UserRepo, loop)
  note right: approval_service.py:108-150

  ApprovalSvc -> UserRepo: handle_approved(\napproval, creator_id, signers, "approved")
  note right: user_repository.py:47-98

  UserRepo -> UserRepo: 準備文件資訊
  note right: document_id = uuid.uuid4()\ndocument_name = f"{approval_name}_{action_type}_{final_status}_四階證明文件"

  UserRepo -> Database: CALL system_handle_approved_user_approval(\nuser_id, approval_id, action_type, final_status,\nsigners, document_id, document_name,\nuploadfile_entity_id, creator_id)
  note right: user_repository.py:69-96\n執行 PostgreSQL 預存程序

  Database --> UserRepo: document_id
  note right: 返回生成的文件 ID

  UserRepo --> ApprovalSvc: document_id

  note over ApprovalSvc: 用戶類別不需要風險追蹤\n(跳過 _risk_tracking_logic_service)

  ApprovalSvc -> ApprovalSvc: _document_repo.get_document_archive_ids_by_related_object(\nrelated_object_id, "user")
  note right: approval_service.py:130-135

  ApprovalSvc -> DocumentSvc: archive_document(\ndocument_id, document_archive_ids, "user")
  note right: approval_service.py:137-141

  == 通知與清理階段 ==

  Consumer -> Email: approved_success_notify(\nemail, approval_id)
  note right: approval_approved_callback.py:33-35

  Consumer -> Consumer: queue_service.delete_queue(\napproval_id, loop)
  note right: approval_approved_callback.py:38-39

  Consumer -> Consumer: ch.basic_ack(delivery_tag)
  note right: approval_approved_callback.py:41

  @enduml